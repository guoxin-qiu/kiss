import{_ as e,c as t,b as i,o as n}from"./app-C01vnHKY.js";const o={};function r(s,a){return n(),t("div",null,a[0]||(a[0]=[i('<h1 id="只言片语-待扩展" tabindex="-1"><a class="header-anchor" href="#只言片语-待扩展"><span>只言片语 待扩展</span></a></h1><h2 id="ai-浪潮下-程序员如何转型" tabindex="-1"><a class="header-anchor" href="#ai-浪潮下-程序员如何转型"><span>AI 浪潮下，程序员如何转型</span></a></h2><p>在未来人工智能发展中，程序员的行业是【掌控者】而不是【协作者】。技术代码的产出已经不是程序员的基础要求了，程序员要着眼于程序设计师的角色去转变。未来程序员应该更注重架构能力、设计能力，而非基础编码能力（基础算法、基础功能）。</p><p>在大模型时代到来之前，开发者的技能主要围绕在对<strong>编程语言的精通、对各种技术栈和软件架构的深入了解、以及如何高效、高质量地编写可长期维护的软件</strong>上。</p><p>人工智能给开发者领域带来的最重大变化之一是<strong>任务的自动化</strong>。人工智能算法和系统现在可以处理重复和平凡的任务，让<strong>开发人员可以专注于更复杂、更有创意的问题解决</strong>。这种自动化不仅提高了生产力，还为软件开发的新可能性铺平了道路。</p><p>“人工智能技术与软件工程的融合为该领域的专业人士开辟了激动人心的机遇。”——人工智能解决方案首席技术官 JohnSmith</p><p>如果想要在未来保持开发的优势，那就不能在关注自己完成了什么功能，而是应该理解整个项目的设计，如何划分多个基础功能交给 AI 辅助实现。</p><p>程序员应类似于 BA+TechLead+QA 的综合角色。</p><h2 id="关于注释" tabindex="-1"><a class="header-anchor" href="#关于注释"><span>关于注释</span></a></h2><p>如果是自己长期维护的建议写注释，特别是接口的文档注释一定要全面。 如果是多人维护，建议通过自文档化的方式来维护。有时引入额外的命名变量比添加注释更能提高代码的可读性。可以写概要的注释，说明业务上的诉求和逻辑。</p><p>程序员最讨厌的两件事：</p><ul><li>接收的代码没有注释</li><li>被要求自己写注释</li></ul>',12)]))}const h=e(o,[["render",r]]),c=JSON.parse('{"path":"/7.others/01.draft/%E5%8F%AA%E8%A8%80%E7%89%87%E8%AF%AD.html","title":"只言片语 待扩展","lang":"zh-cn","frontmatter":{},"headers":[{"level":2,"title":"AI 浪潮下，程序员如何转型","slug":"ai-浪潮下-程序员如何转型","link":"#ai-浪潮下-程序员如何转型","children":[]},{"level":2,"title":"关于注释","slug":"关于注释","link":"#关于注释","children":[]}],"git":{"updatedTime":1745043563000,"contributors":[{"name":"guoxin-qiu","username":"guoxin-qiu","email":"guoxin.qiu@outlook.com","commits":1,"url":"https://github.com/guoxin-qiu"}],"changelog":[{"hash":"26baba58da405cc8ce226278a2d276ba14481967","time":1745043563000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"update h 2"}]},"filePathRelative":"7.others/01.draft/只言片语.md"}');export{h as comp,c as data};
