import{_ as d,c as r,b as e,o as a}from"./app-C01vnHKY.js";const h={};function s(l,t){return a(),r("div",null,t[0]||(t[0]=[e('<h1 id="axure-rp-9" tabindex="-1"><a class="header-anchor" href="#axure-rp-9"><span>Axure RP 9</span></a></h1><h2 id="函数和系统变量表" tabindex="-1"><a class="header-anchor" href="#函数和系统变量表"><span>函数和系统变量表</span></a></h2><h3 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串"><span>字符串</span></a></h3><table><thead><tr><th>方法名</th><th>描述</th></tr></thead><tbody><tr><td>length</td><td>返回字符串的长度</td></tr><tr><td>charAt(index)</td><td>返回文本中指定位置的字符</td></tr><tr><td>charCodeAt(index)</td><td>返回文本中指定位置字符的 Unicode 编码</td></tr><tr><td>concat(&#39;string&#39;)</td><td>连接两个或多个字符串</td></tr><tr><td>indexOf(&#39;searchValue&#39;)</td><td>返回从左至右查询字符串在当前文本对象中首次出现的位置</td></tr><tr><td>lastIndexOf(&#39;searchvalue&#39;)</td><td>返回从右至左查询字符串在当前文本对象中首次出现的位置</td></tr><tr><td>replace(&#39;searchvalue&#39;,&#39;newvalue&#39;)</td><td>用新的字符串替换当前文本对象中指定的字符串</td></tr><tr><td>slice(start,end)</td><td>从当前文本中截取从指定起始位置开始到终止位置之前的字符串（不含终止位置）</td></tr><tr><td>split(&#39;separator&#39;,limit)</td><td>将文中的字符串按照指定分隔符分组，并返回从左开始的指定数量的字符串</td></tr><tr><td>substr(start,length)</td><td>从文本中的指定起始位置开始截取一定长度的字符串</td></tr><tr><td>substring(from,to)</td><td>从文本中截取从指定位置到另一指定位置区间的字符串（较小的参数为起止位置，较大的参数为终止位置，不包括终止位置）</td></tr><tr><td>toLowerCase()</td><td>将文本中所有的大写字母转换为小写字母</td></tr><tr><td>toUpperCase()</td><td>将文本中所有的小写字母转换为大写字母</td></tr><tr><td>trim()</td><td>删除文本两端的空格</td></tr><tr><td>toString()</td><td>将数值转换为字符串</td></tr></tbody></table><h3 id="数字" tabindex="-1"><a class="header-anchor" href="#数字"><span>数字</span></a></h3><table><thead><tr><th>运算符/方法</th><th>描述</th></tr></thead><tbody><tr><td>+</td><td>返回两数相加的值</td></tr><tr><td>-</td><td>返回两数相减的值</td></tr><tr><td>*</td><td>返回两数相乘的值</td></tr><tr><td>/</td><td>返回两数相除的值</td></tr><tr><td>%</td><td>返回两数相除的余数</td></tr><tr><td>Math.abs(x)</td><td>返回参数的绝对值</td></tr><tr><td>Math.acos(x)</td><td>返回参数的反余弦值</td></tr><tr><td>Math.asin(x)</td><td>返回参数的反正弦值</td></tr><tr><td>Math.atan(x)</td><td>返回参数的反正切值</td></tr><tr><td>Math.atan2(y,x)</td><td>返回某一点 (x,y) 的弧度值</td></tr><tr><td>Math.ceil(x)</td><td>向上取整数</td></tr><tr><td>Math.cos(x)</td><td>余弦函数</td></tr><tr><td>Math.exp(x)</td><td>以 e 为底的指数函数</td></tr><tr><td>Math.floor(x)</td><td>向下取整数</td></tr><tr><td>Math.log(x)</td><td>以 e 为底的对数函数</td></tr><tr><td>Math.max(x,y)</td><td>返回参数中的最大值</td></tr><tr><td>Math.min(x,y)</td><td>返回参数中的最小值</td></tr><tr><td>Math.pow(x,y)</td><td>返回 x 的 y 次幂</td></tr><tr><td>Math.random()</td><td>返回 0~1 之间的随机数（不含 0 和 1）</td></tr><tr><td>Math.sin(x)</td><td>正弦函数</td></tr><tr><td>Math.sqrt(x)</td><td>平方根函数</td></tr><tr><td>Math.tan(x)</td><td>正切函数</td></tr></tbody></table><h3 id="数字-2" tabindex="-1"><a class="header-anchor" href="#数字-2"><span>数字 2</span></a></h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>toExponential(decimalPoints)</td><td>把数字转换为指数计数法</td></tr><tr><td>toFixed(decimalPoints)</td><td>将数字转为保留指定位数的小数，当该数字的小数位数超出指定位数时进行四舍五入</td></tr><tr><td>toPrecision(length)</td><td>将数字格式化为指定的长度，当该数字超出指定的长度时，会将其转换为指数计数法</td></tr></tbody></table><h3 id="日期" tabindex="-1"><a class="header-anchor" href="#日期"><span>日期</span></a></h3><table><thead><tr><th>方法名</th><th>描述</th></tr></thead><tbody><tr><td>Now</td><td>返回当前计算机的系统日期</td></tr><tr><td>GenDate</td><td>返回原型生成的日期</td></tr><tr><td>getDate()</td><td>返回日期的数值</td></tr><tr><td>getDay()</td><td>返回星期的数值</td></tr><tr><td>getDayOfWeek()</td><td>返回星期的英文名称</td></tr><tr><td>getFullYear()</td><td>返回年份的数值</td></tr><tr><td>getHours()</td><td>返回小时的数值</td></tr><tr><td>getMilliseconds()</td><td>返回毫秒的数值</td></tr><tr><td>getMinutes()</td><td>返回分钟的数值</td></tr><tr><td>getMonth()</td><td>返回月份的数值</td></tr><tr><td>getMonthName()</td><td>返回月份的英文名称</td></tr><tr><td>getSeconds()</td><td>返回秒钟的数值</td></tr><tr><td>getTime()</td><td>返回从 1970 年 1 月 1 日 00:00:00 到当前日期的毫秒数，以格林威治时间为准</td></tr><tr><td>getTimezoneOffset()</td><td>返回世界标准时间 (UTC) 与当前主机时间之间相差的的分钟数</td></tr><tr><td>getUTCDate()</td><td>使用世界标准时间，返回日期的数值</td></tr><tr><td>getUTCDay()</td><td>使用世界标准时间，返回星期的数值</td></tr><tr><td>getUTCFullYear()</td><td>使用世界标准时间，返回年份的数值</td></tr><tr><td>getUTCHours()</td><td>使用世界标准时间，返回小时的数值</td></tr><tr><td>getUTCMilliseconds()</td><td>使用世界标准时间，返回毫秒的数值</td></tr><tr><td>getUTCMinutes()</td><td>使用世界标准时间，返回分钟的数值</td></tr><tr><td>getUTCMonth()</td><td>使用世界标准时间，返回月份的数值</td></tr><tr><td>getUTCSeconds()</td><td>使用世界标准时间，返回秒数的数值</td></tr><tr><td>parse(datestring)</td><td>返回指定日期字符串与 1970 年 1 月 1 日 00:00:00 之间相差的毫秒数</td></tr><tr><td>toDateString()</td><td>返回字符串格式的日期</td></tr><tr><td>toISOString()</td><td>返回 ISO 格式的日期，格式为 yyyy-mm-ddThh:mm:ss.sssZ</td></tr><tr><td>toJSON()</td><td>返回 JSON 格式的日期字符串，格式为 yyyy-mm-ddThh:mm:ss.sssZ</td></tr><tr><td>toLocaleDateString()</td><td>返回字符串格式日期的“年/月/日”部分</td></tr><tr><td>toLocaleTimeString()</td><td>返回字符串格式时间的“时分秒”部分</td></tr><tr><td>toLocaleString()</td><td>返回字符串格式的日期和时间</td></tr><tr><td>toUTCString()</td><td>返回字符串形式的世界标准时间</td></tr><tr><td>ToTimeString()</td><td>返回字符串形式的当前时间</td></tr><tr><td>UTC(year,month,day,hour,min,sec,millisec)</td><td>返回指定日期与 1970 年 1 月 1 日 00:00:00 之间相差的毫秒数</td></tr><tr><td>valueOf()</td><td>返回当前日期的原始值</td></tr><tr><td>addYears(years)</td><td>返回新日期，新日期的年份为当前年份数值加上指定年份数值</td></tr><tr><td>addMonths(months)</td><td>返回新日期，新日期的月份为当前月份数值加上指定月份数值</td></tr><tr><td>addDays(days)</td><td>返回新日期，新日期的天数为当前天数值加上指定天数值</td></tr><tr><td>addHours(hours)</td><td>返回新日期，新日期的小时为当前小时数值加上指定小时数值</td></tr><tr><td>addMinutes(minutes)</td><td>返回新日期，新日期的分钟为当前分钟数值加上指定分钟数值</td></tr><tr><td>addSeconds(seconds)</td><td>返回新日期，新日期的秒数为当前秒数值加上指定秒数值</td></tr><tr><td>addMilliseconds(ms)</td><td>返回新日期，新日期的毫秒数为当前毫秒数值加上指定毫秒数值</td></tr></tbody></table><h3 id="元件" tabindex="-1"><a class="header-anchor" href="#元件"><span>元件</span></a></h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>This</td><td>返回当前元件</td></tr><tr><td>Target</td><td>返回目标元件</td></tr><tr><td>x</td><td>返回元件的 x 轴坐标值</td></tr><tr><td>y</td><td>返回元件的 y 轴坐标值</td></tr><tr><td>width</td><td>返回元件的宽度值</td></tr><tr><td>height</td><td>返回元件的高度值</td></tr><tr><td>scrollX</td><td>返回元件的水平滚动距离</td></tr><tr><td>scrollY</td><td>返回元件的垂直滚动距离</td></tr><tr><td>text</td><td>返回元件的文字</td></tr><tr><td>name</td><td>返回元件的自定义名称</td></tr><tr><td>top</td><td>返回元件的上边界 y 轴坐标值</td></tr><tr><td>left</td><td>返回元件的左边界 x 轴坐标值</td></tr><tr><td>right</td><td>返回元件的右边界 x 轴坐标值</td></tr><tr><td>bottom</td><td>返回元件的下边界 y 轴坐标值</td></tr><tr><td>opacity</td><td>返回元件的不透明比例</td></tr><tr><td>rotation</td><td>返回元件的旋转角度</td></tr></tbody></table><h3 id="窗口" tabindex="-1"><a class="header-anchor" href="#窗口"><span>窗口</span></a></h3><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>Window.width</td><td>返回浏览器页面的宽度</td></tr><tr><td>Window.height</td><td>返回浏览器页面的高度</td></tr><tr><td>Window.scrollX</td><td>返回浏览器页面水平滚动的距离</td></tr><tr><td>Window.scrollY</td><td>返回浏览器页面垂直滚动的距离</td></tr></tbody></table><h3 id="页面" tabindex="-1"><a class="header-anchor" href="#页面"><span>页面</span></a></h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>PageName</td><td>返回当前页面的名称</td></tr></tbody></table><h3 id="鼠标" tabindex="-1"><a class="header-anchor" href="#鼠标"><span>鼠标</span></a></h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>Cursor.x</td><td>鼠标指针在页面位置的 x 轴坐标</td></tr><tr><td>Cursor.y</td><td>鼠标指针在页面位置的 y 轴坐标</td></tr><tr><td>DragX</td><td>鼠标指针开始沿 x 轴拖曳元件时的移动距离，向右数值为正，向左数值为负</td></tr><tr><td>DragY</td><td>鼠标指针开始沿 y 轴拖曳元件时的移动瞬间，向下数值为正，向上数值为负</td></tr><tr><td>TotalDragX</td><td>鼠标指针沿 x 轴拖曳元件时从开始到结束移动的距离，向右数值为正，向左数值为负</td></tr><tr><td>TotalDragY</td><td>鼠标指针沿 y 轴拖曳元件时从开始到结束移动的距离，向下数值为正，向上数值为负</td></tr><tr><td>DragTime</td><td>鼠标指针拖曳元件从开始到结束的时长（毫秒）</td></tr></tbody></table><h3 id="中继器-数据集" tabindex="-1"><a class="header-anchor" href="#中继器-数据集"><span>中继器/数据集</span></a></h3><table><thead><tr><th>属性/方法</th><th>描述</th></tr></thead><tbody><tr><td>Item</td><td>数据集某一行的对象</td></tr><tr><td>TargetItem</td><td>目标数据集某一行的对象</td></tr><tr><td>Item. 列名</td><td>返回数据集中指定列的值</td></tr><tr><td>index</td><td>返回数据集某行的索引编号，编号起始为 1</td></tr><tr><td>isFirst</td><td>如果数据集某行是第一行，则返回 True，否则返回 False</td></tr><tr><td>isLast</td><td>如果数据集某行是最后一行，则返回 True，否则返回 False</td></tr><tr><td>isEven</td><td>如果数据集某行是偶数行，则返回 True，否则返回 False</td></tr><tr><td>isOdd</td><td>如果数据集某行是奇数行，则返回 True，否则返回 False</td></tr><tr><td>isMarked</td><td>如果数据集某行被标记，则返回 True，否则返回 False</td></tr><tr><td>isVisible</td><td>如果数据集某行可见，则返回 True，否则返回 False</td></tr><tr><td>Repeater</td><td>中继器的对象</td></tr><tr><td>visibleItemCount</td><td>返回中继器当前页中可见“项”的数量</td></tr><tr><td>itemCount</td><td>返回中继器已加载“项”的总数量，如果有筛选，则返回筛选后的数量</td></tr><tr><td>dataCount</td><td>返回中继器数据集中行的总数量，是否添加筛选均不会变化</td></tr><tr><td>pageCount</td><td>返回中继器分页的总页数</td></tr><tr><td>Item</td><td>数据集某一行的对象</td></tr><tr><td>pageIndex</td><td>返回中继器当前页的页码</td></tr></tbody></table>',20)]))}const i=d(h,[["render",s]]),o=JSON.parse('{"path":"/3.tech/11.tech-tools/axure.html","title":"Axure RP 9","lang":"zh-cn","frontmatter":{},"headers":[{"level":2,"title":"函数和系统变量表","slug":"函数和系统变量表","link":"#函数和系统变量表","children":[{"level":3,"title":"字符串","slug":"字符串","link":"#字符串","children":[]},{"level":3,"title":"数字","slug":"数字","link":"#数字","children":[]},{"level":3,"title":"数字 2","slug":"数字-2","link":"#数字-2","children":[]},{"level":3,"title":"日期","slug":"日期","link":"#日期","children":[]},{"level":3,"title":"元件","slug":"元件","link":"#元件","children":[]},{"level":3,"title":"窗口","slug":"窗口","link":"#窗口","children":[]},{"level":3,"title":"页面","slug":"页面","link":"#页面","children":[]},{"level":3,"title":"鼠标","slug":"鼠标","link":"#鼠标","children":[]},{"level":3,"title":"中继器/数据集","slug":"中继器-数据集","link":"#中继器-数据集","children":[]}]}],"git":{"updatedTime":1746600483000,"contributors":[{"name":"guoxin-qiu","username":"guoxin-qiu","email":"guoxin.qiu@outlook.com","commits":1,"url":"https://github.com/guoxin-qiu"}],"changelog":[{"hash":"026f6bb616d91e2338d8f2dbf2b4c45d360e4979","time":1746600483000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"update: 250507"}]},"filePathRelative":"3.tech/11.tech-tools/axure.md"}');export{i as comp,o as data};
