import{_ as r,c as p,b as e,o as c}from"./app-C01vnHKY.js";const t={};function h(n,o){return c(),p("div",null,o[0]||(o[0]=[e('<h1 id="开篇词-如何高效入门-pytorch" tabindex="-1"><a class="header-anchor" href="#开篇词-如何高效入门-pytorch"><span>开篇词 如何高效入门 PyTorch</span></a></h1><p>最早，我只是把 PyTorch，打上了一个新秀的标签，记得那时候，深度学习的浪潮才刚刚兴起，传统的机器学习开始转到深度学习，但是我们能选的框架却十分有限。</p><p>当时在学术界流行的一个深度学习框架是 Theano，可能有的同学都没有听说过它。这个框架就像是祖师爷般的存在，从 2008 年诞生之后的很长一段时间中，它都是深度学习开发和研究的行业标准。</p><p>为了复现论文中的算法，我开始学习 Theano。接触之后，我发现它的声明式编程，无论是风格还是逻辑都十分奇特。而且那时候的学习资料很匮乏，只能啃官方的说明文档。如此一来，我觉得 Theano 十分晦涩难学，入门门槛非常高。</p><p>后来，我去到了互联网大厂的核心部门工作。那时学术界已经涌现出了很多深度学习方面的研究，而工业界才刚刚开始将深度学习技术落地。Google 的 TensorFlow 框架于 2015 年正式开源，而我们的团队也开始着手把深度学习技术应用于文本处理等方向。</p><p>2017 年，Google 发布了 TensorFlow 1.0 版本，到了 2019 年，又发布了 2.0 新版本。TensorFlow 1.x 版本时期，TensorFlow 框架拥有大量的用户。不过，问题也非常明显，主要的弊端就是<strong>框架环境配置不兼容，新老版本函数差异也很大，且编程困难</strong>。</p><p>但凡涉及版本更新，总会出现 API 变化，前后版本不兼容的问题。并且当我阅读别人代码的时候，TensorFlow 1.x 的可读性也不是很高。这些问题都增加了我的学习成本。直到 TensorFlow 2.x 版本，TensorFlow 逐渐借鉴了 PyTorch 的优点，进行了自我完善。</p><p>而与 TensorFlow 同一时期横空出世，也拥有众多用户的一个深度学习框架还有 Keras。Keras 的 API 对用户十分友好，使用起来很容易上手。如果有什么想法需要快速实验，看一看效果，那 Keras 绝对是不二的选择。</p><p>但是，高度模块化的封装也同样会带来弊端，看起来学习 Keras 似乎十分容易，但我很快就遇到了瓶颈。高度封装就意味着不够灵活，比如说如果需要修改一些网络底层的结构，Keras 所提供的接口就没有支持。在使用 Keras 的大多数时间里，我们主要都停留在调用接口这个阶段，很难真正学习到深度学习的内容。</p><p>直到 PyTorch 出现，随着使用它的人越来越多，其技术迭代速度跟生态发展速度都很迅猛。如果你在 GitHub 找到了一个 PyTorch 项目相关的开源代码，我们可以很容易移植到自己的项目中来，直接站在巨人的肩膀上看世界。</p><p>而且相比前面那些主流框架，<strong>PyTorch 有着对用户友好的命令式编程风格</strong>。PyTorch 设计得更科学，无需像 TensorFlow 那样，要在各种 API 之间切换，操作更加便捷。</p><p>PyTorch 的环境配置也很方便，各种开发版本都能向下兼容，不存在老版本的代码在新版本上无法使用的困扰，而且 PyTorch 跟 NumPy 的风格比较像，能轻易和 Python 生态集成起来，我们只需掌握 NumPy 和基本的深度学习概念即可上手，在网络搭建方面也是快捷又灵活。</p><p>另外，PyTorch 在 debug 代码的过程也十分方便，可以随时输出中间向量结果。用 PyTorch 就像在 Python 中使用 print 一样简单，只要把一个 pdb 断点扔进 PyTorch 模型里，直接就能用。</p><p>因为它的优雅灵活和高效可用，吸引了越来越多的人学习。如果还有人只把 PyTorch 当成一个新秀，觉得 PyTroch 不过是个“挑战者”，试图在 TensorFlow 主导的世界里划出一片自己的地盘。那么数据可以证明，这种想法已经时过境迁。事实上，PyTorch 无论在学术界还是在工业界，都已经霸占了半壁江山。</p><p>从学术界来看，2019 年之前，TensorFlow 还是各大顶会论文选择的主流框架，而 2019 年之后，顶会几乎成了 PyTorch 的天下，此消彼长，PyTorch 只用了一年的时间。</p><p><img src="https://static001.geekbang.org/resource/image/96/57/96afc1a6981ea2f8a2d847584ccb7c57.jpg?wh=900x559" alt=""></p><p>要知道，<strong>机器学习这个领域始终是依靠研究驱动的，工业界自然也不能忽视科学研究的成果</strong>。就拿我所在的团队来说，现在也已经逐步向 PyTorch 框架迁移，新开展的项目都会首选用 PyTorch 框架进行实现。</p><p>不得不说，<strong>PyTorch 的应用范围已经逐渐扩大，同时也促进了其生态建设的发展</strong>。由于现在越来越多的开发者都在使用 PyTroch，一旦我们的程序遇到了 error 或 bug，很容易就可以在开发论坛上寻找到解决方案。</p><p>**总之，一旦你掌握了 PyTorch，就相当于走上了深度学习、机器学习的快车道。**以后学习其他深度学习框架也可以快速入门，融会贯通。</p><p>如果你即将或者已经进入了深度学习和机器学习相关领域，PyTorch 能够帮你快速实现模型与算法的验证，快速完成深度学习模型部署，提供高并发服务，还可以轻松实现图像生成、文本分析、情感分析等有趣的实验。另外有很多算法相关的岗位，也同样会要求你熟练使用 PyTorch 等工具。</p><p>可以探索的方向还有很多，这里就不一一列举了。那么问题来了，既然 PyTorch 有这么多优点，我们要怎样快速上手呢？</p><p>只看原理好比空中楼阁，而直接实战对初学者来说又相对困难。因此我推荐的方法是，先理一个整体框架，有了整体认知之后，再通过实战练习巩固认知。</p><p>具体来说，我们要先把框架的基本语法大致了解一下，然后尽快融入到一个实际项目当中，看一看在实际任务中，我们是怎么基于框架去解决一个问题的。这个专栏，也正是沿着这样一个思路设计的。我在专栏里给你提供了丰富的代码和实战案例，可以帮助你快速上手 PyTorch。</p><p><img src="https://static001.geekbang.org/resource/image/08/7a/08b96da4677066769fe3e6246f70237a.jpg?wh=1920x1418" alt="图片" title="专栏知识地图"></p><p>通过这个专栏，你将会熟练使用 PyTorch 工具，解决自己的问题，这是这个专栏要实现的最基础的目标。</p><p>除了掌握工具用法之上，我希望交付的终点是让你获得分析问题的能力和解决问题的方法，让你懂得如何优化你自己的算法与模型。在学习经验方面，我希望这个专栏为你打开一扇窗，让你知道走深度学习这条路，需要有怎样的知识储备。</p><p>为了让你由入门到精通，我把专栏分成了三个递进的部分。</p><p><strong>基础篇</strong></p><p>简要介绍 PyTorch 的发展趋势与框架安装方法，以及 PyTorch 的前菜——NumPy 的常用操作。我们约定使用 PyTorch 1.9.0 版本，以及默认你已经掌握了 Python 编程与简单的机器学习基础，不过你也不用太过担心，遇到新知识的我基本都会从 0 开始讲起的。</p><p><strong>模型训练篇</strong></p><p>想要快速掌握一个框架，就要从核心模块入手。在这个部分，会结合深度学习模型训练的一系列流程，为你详解自动求导机制、搭建网络、更新模型参数、保存与加载模型、训练过程可视化、分布式训练等等模块，带你具体看看 PyTorch 能给我们提供怎样的帮助。通过这个部分的学习，你就能基于 PyTorch 搭建网络模型了。</p><p><strong>实战篇</strong></p><p>我们整个专栏都是围绕 PyTorch 框架在具体项目实践中的应用来讲的，所以最后我还会结合当下流行的图像与自然语言处理任务，串联前面两个模块的内容，为你深入讲解 PyTorch 如何解决实际问题。</p><p>总之，<strong>除了交付给你一个系统的 PyTorch 技术学习框架，我还希望给你传递我在深度学习这条路上的经验思考</strong>。</p><p>最后，给你一点建议，对于学习 PyTorch 来说，边学边查、边练边查是个很好的方法。因为在我们实际做项目的时候，肯定会遇到一些之前没有使用过的函数，自己去查的话可以很好地加强记忆。</p><p>当然，我也会尽心做好一个引路人，带你一步步实现课程目标，也期待你能以更加积极的状态投入到本次的学习之旅。现在就让我们一起探索 PyTorch，打开深度学习的大门吧！</p>',36)]))}const a=r(t,[["render",h]]),T=JSON.parse('{"path":"/3.tech/83.PyTorch%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98/00_%E5%BC%80%E7%AF%87%E8%AF%8D_%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%85%A5%E9%97%A8PyTorch.html","title":"开篇词 如何高效入门 PyTorch","lang":"zh-cn","frontmatter":{},"headers":[],"git":{"updatedTime":1746672966000,"contributors":[{"name":"guoxin-qiu","username":"guoxin-qiu","email":"guoxin.qiu@outlook.com","commits":1,"url":"https://github.com/guoxin-qiu"}],"changelog":[{"hash":"873191059aa4709eddd6184a409223b5054edb2a","time":1746672966000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"update: pytorch fixed"}]},"filePathRelative":"3.tech/83.PyTorch深度学习实战/00_开篇词_如何高效入门PyTorch.md"}');export{a as comp,T as data};
