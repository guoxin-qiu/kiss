import{_ as a,c as l,b as i,o as n}from"./app-C01vnHKY.js";const h={};function s(t,e){return n(),l("div",null,e[0]||(e[0]=[i('<h1 id="用例图" tabindex="-1"><a class="header-anchor" href="#用例图"><span>用例图</span></a></h1><h2 id="用例图的元素" tabindex="-1"><a class="header-anchor" href="#用例图的元素"><span>用例图的元素</span></a></h2><p><img src="https://www.educity.cn/article_images/2016-04-29/0589f712-be45-4e9b-811c-1a2d89dd38c3.jpg" alt="用例图中的基本元素"></p><ul><li>参与者 参与者（角色、动作者、执行者）是指存在于系统外部并与系统进行交互的任何事物，既可以是使用系统的用户，也可以是其他外部系统和设备等外部实体。</li><li>用例 用例是在系统中执行的一系列动作，这些动作将生产特定参与者可见的价值结果。用例表示系统所提供的服务，它定义了系统是如何被参与者使用的，它描述的是参与者未了使用系统所提供的某一完整功能而与系统之间发生的一段对话。</li><li>通信关联 通信关联表示的是参与者和用例之间的关系，或用例与用例之间的关系。箭头表示在这一关系中哪一方是对话的主动发起者。交投所指方是对话的被动接受者，箭尾所指方是对话的主动发起者。如果不想强调对话中的主动与被动关系，可以使用不带箭头的关联实线。在用例模型中，信息流不是由通信关联来表示的，信息流是默认存在的，并且是双向的，它与箭头所指的方向没有关系。</li></ul><h2 id="识别参与者" tabindex="-1"><a class="header-anchor" href="#识别参与者"><span>识别参与者</span></a></h2><p>参与者是与系统交互的所有事物，该角色不仅可以由人承担，还可以是其他系统和硬件设备，甚至是系统时钟。</p><ul><li>其他系统：当系统需要与其他系统交互时，其他系统就是一个参与者。例如，对某企业的在线教育平台系统而言，OA 系统就是一个参与者。</li><li>硬件设备：如果系统需要与硬件设备交互，硬件设备就是一个参与者。例如，在开发 IC 卡门禁系统时，IC 卡读写器就是一个参与者。</li><li>时钟：当系统需要定时触发时，时钟就是一个参与者。例如，开发在线测试系统中的“定时交卷”功能时，就需要引入时钟作为参与者。</li></ul><p>参与者一定在系统之外，不是系统的一部分。可以通过下列问题来帮助系统分析师发现系统的参与者：谁使用这个系统？谁安装这个系统？谁启动这个系统？谁维护这个系统？谁关闭这个系统？哪些（其他的）系统使用这个系统？谁从这个系统获取信息？谁为这个系统提供信息？是否有事情自动在预计的时间发生？</p><p>执行系统某项功能的参与者可能有多个，但这多个参与者在使用系统是会有不同的职责划分，根据职责的重要程度不同，有主要参与者和次要参与者之分。主要参与者时从系统中直接获得可度量价值的参与者，次要参与者的需求驱动了用例所表示的行为或功能，在用例中起支持作用，帮助主要参与者完成他们的工作，次要参与者不能脱离主要参与者而存在。开发用例的重点是要找到主要参与者。</p><h2 id="合并需求获得用例" tabindex="-1"><a class="header-anchor" href="#合并需求获得用例"><span>合并需求获得用例</span></a></h2><p><img src="https://www.educity.cn/article_images/2016-04-29/54a96981-763c-4a05-88a4-df839ead75cf.jpg" alt="用例图示例"></p><h3 id="用例命名" tabindex="-1"><a class="header-anchor" href="#用例命名"><span>用例命名</span></a></h3><p>采用“动词（短语）+名词（短语）”的形式，例如，“开通课程”和“课程考试”等。而且，最好能够对用例进行编号，这也是实现需求跟踪管理的重要技巧，通过编号可以将用户的需求落实到特定的用例中去。</p><h3 id="不能混淆用例和用例所包含的步骤" tabindex="-1"><a class="header-anchor" href="#不能混淆用例和用例所包含的步骤"><span>不能混淆用例和用例所包含的步骤</span></a></h3><p>例如，“开通课程”功能要经过验证学员信息、检查学员权限、保存开通记录、修改课程选修人数等步骤才能完成，在系统中这些步骤不能作为单独的功能对外提供，它们只是一个用例所包含的事件流，或者是用例的子功能。</p><h3 id="注意区分业务用例和系统用例" tabindex="-1"><a class="header-anchor" href="#注意区分业务用例和系统用例"><span>注意区分业务用例和系统用例</span></a></h3><p>当针对整个业务领域建模时，需要使用业务用例，其中会涉及大量的人工活动，录入，在线教育平台系统中有一项重要工作是“编写教材”，这就是业务用例，是信息系统无法完成的。信息系统作为整个业务系统的一部分，只负责实现系统的部分功能，因此，只需要识别出系统用例，而不需要考虑业务用例。</p><h2 id="细化用例描述" tabindex="-1"><a class="header-anchor" href="#细化用例描述"><span>细化用例描述</span></a></h2><p>用例建模的主要工作是书写用例规约（user case specification），而不是画图。用例模板为一个给定项目的所有人员定义了用例规约的结果，其内容至少包括用例名、参与者、目标、前置条件、事件流（基本事件流和扩展事件流）和后置条件等，其他的还可以包括非功能需求和用例优先级等。</p><p>复杂系统会有较多用例导致所有用例难以维持一种平面结构，可以对用例根据用例主题进行分组。</p><h3 id="用例名词" tabindex="-1"><a class="header-anchor" href="#用例名词"><span>用例名词</span></a></h3><p>用例名词应该与用例图相符，并写上其相应的编号。</p><h3 id="简要说明" tabindex="-1"><a class="header-anchor" href="#简要说明"><span>简要说明</span></a></h3><p>对用例为参与者所传递的价值结果进行描述，应注意语言简要，使用用户能够阅读的自然语言。</p><h3 id="事件流" tabindex="-1"><a class="header-anchor" href="#事件流"><span>事件流</span></a></h3><p>事件流是指当参与者和系统试图达到一个目标时所发生的一系列活动，也就是用例所完成的工作步骤。在编写时应注意使用简单的语法，主语明确，语义易于理解；明确写出“谁控制球”，也就是在事件流描述中，让读者直观地了解是参与者在控制还是系统在控制；从俯视的角度来编写，指出参与者的动作，以及系统的响应；描述用户意图和系统职责，而不叙述具体的行为和技术细节，特别是有关用户界面的细节。</p><p>执行一个用例的事件流有多种可能的路线， 其中主事件流（基本事件流）是指能够满足目标的典型的成功路径，主事件流通常不包括任何条件和分支，符合大多数人的期望，从而更容易理解和扩展。备选事件流（扩展事件流）也成为备选路径，是完成用例可能出现失败的情况、分支路径或扩展路径，为了不影响用例活动清晰的主线，将这些分支处理全部抽取出来作为备选事件流。在事件流的描述中，主事件流使用“确认”和“验证”等确定性语句，而不是“检查是否...”和“如果... 那么... 否则...”等条件语句，这些分支情况利用备选事件流来说明。</p><p>对于一些事件流较为复杂的，可以在用例描述中引用顺序图、状态图和通信图等手段进行描述。</p><h3 id="非功能需求" tabindex="-1"><a class="header-anchor" href="#非功能需求"><span>非功能需求</span></a></h3><p>在非功能需求的描述方面，一定要注意使其可度量和可验证。</p><h3 id="前置条件和后置条件" tabindex="-1"><a class="header-anchor" href="#前置条件和后置条件"><span>前置条件和后置条件</span></a></h3><p>前置条件是执行用例之前必须存在的系统状态，如果前置条件不满足，则用例无法启动。例如，“开通课程”用例的前置条件是客服人员已正确登录到系统中；后置条件是用例执行完毕系统可能处于的一组状态。一旦用例成功执行，可能会导致系统内部某些状态的变化，例如，成功地“开通课程”会使该课程的选修人数增加，会使学员的权限发生变化等。而某些用例也可能没有前置条件或后置条件，例如，“学员联络”用例没有后置条件，因为该用例执行后不会改变系统状态。如果在当前阶段不容易确定前置条件或后置条件，则可以在以后再细化。</p><h3 id="扩展点" tabindex="-1"><a class="header-anchor" href="#扩展点"><span>扩展点</span></a></h3><p>如果包括扩展（或包含）用例，则写出扩展（或包含）用例名，并说明在什么情况下使用。</p><h3 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级"><span>优先级</span></a></h3><p>说明用户对该用例的期望值，为以后的开发工作确定先后顺序。</p><h2 id="调整用例模型" tabindex="-1"><a class="header-anchor" href="#调整用例模型"><span>调整用例模型</span></a></h2><h3 id="包含关系" tabindex="-1"><a class="header-anchor" href="#包含关系"><span>包含关系</span></a></h3><p>当可以从两个或两个以上的用例中提取公共行为时，应该使用包含关系来表示它们。其中这个提取出来的公共用例称为抽象用例，而把原始用例称为基本用例或基础用例。例如，图 2-2 中的“学习课程”和“课程测试”两个用例都需要检查学员的权限，为此，可以定义一个抽象用例“检查权限”。用例“学习课程”和“课程测试”与用例“检查权限”之间的关系就是包含关系，如图 2-3 所示。其中“&gt;”是包含关系的构造型，箭头指向抽象用例。 <img src="https://www.educity.cn/article_images/2016-04-29/c5c0a1f6-ab45-4594-a305-e8534f3d7e26.jpg" alt="包含关系的例子"> 当多个用例需要使用同一段事件流时，抽象成为公共用例，可以避免在多个用例中重复地描述这段事件流，也可以防止这段事件流在不同用例中的描述出现不一致。当需要修改这段公共的需求时，也只要修改一个用例，避免同时修改多个用例而产生的不一致性和重复性工作。另外，当某个用例的事件流过于复杂时，为了简化用例的描述，也可以将某一段事件流抽象成为一个被包含的用例。</p><h3 id="扩展关系" tabindex="-1"><a class="header-anchor" href="#扩展关系"><span>扩展关系</span></a></h3><p>如果一个用例明显地混合了两种或两种以上的不同场景，即根据情况可能发生多种分支，则可以将这个用例分为一个基本用例和一个或多个扩展用例，这样使描述可能更加清晰。例如，图 2-2 中的学员进行“课程测试”时，其测试的次数可能已超出系统规定的限额，这时就需要学员“充入学习币”。用例“课程测试”和“充入学习币”之间的关系就是扩展关系，如图 2-4 所示。其中“&gt;”是扩展关系的构造型，箭头指向基本用例。 <img src="https://www.educity.cn/article_images/2016-04-29/c645602e-fac8-412a-9b02-d5e91d9de2b1.jpg" alt="扩展关系的例子"></p><h3 id="泛化关系" tabindex="-1"><a class="header-anchor" href="#泛化关系"><span>泛化关系</span></a></h3><p>当多个用例共同拥有一种类似的结构和行为的时候，可以将它们的共性抽象成为父用例，其他的用例作为泛化关系中的子用例。在用例的泛化关系中，子用例是父用例的一种特殊形式，子用例继承了父用例所有的结构、行为和关系。例如，图 2-2 中学员进行课程注册时，假设既可以通过电话注册，也可以通过网上注册，则“注册课程”用例就是“电话注册”用例和“网上注册”用例的泛化，如图 2-5 所示。其中三角箭头指向父用例。 <img src="https://www.educity.cn/article_images/2016-04-29/b9ae5b32-8730-4064-afaf-1e5018031cde.jpg" alt="泛化关系的例子"></p>',43)]))}const r=a(h,[["render",s]]),p=JSON.parse('{"path":"/1.capacity/12.requirement/%E7%94%A8%E4%BE%8B%E5%9B%BE.html","title":"用例图","lang":"zh-cn","frontmatter":{},"headers":[{"level":2,"title":"用例图的元素","slug":"用例图的元素","link":"#用例图的元素","children":[]},{"level":2,"title":"识别参与者","slug":"识别参与者","link":"#识别参与者","children":[]},{"level":2,"title":"合并需求获得用例","slug":"合并需求获得用例","link":"#合并需求获得用例","children":[{"level":3,"title":"用例命名","slug":"用例命名","link":"#用例命名","children":[]},{"level":3,"title":"不能混淆用例和用例所包含的步骤","slug":"不能混淆用例和用例所包含的步骤","link":"#不能混淆用例和用例所包含的步骤","children":[]},{"level":3,"title":"注意区分业务用例和系统用例","slug":"注意区分业务用例和系统用例","link":"#注意区分业务用例和系统用例","children":[]}]},{"level":2,"title":"细化用例描述","slug":"细化用例描述","link":"#细化用例描述","children":[{"level":3,"title":"用例名词","slug":"用例名词","link":"#用例名词","children":[]},{"level":3,"title":"简要说明","slug":"简要说明","link":"#简要说明","children":[]},{"level":3,"title":"事件流","slug":"事件流","link":"#事件流","children":[]},{"level":3,"title":"非功能需求","slug":"非功能需求","link":"#非功能需求","children":[]},{"level":3,"title":"前置条件和后置条件","slug":"前置条件和后置条件","link":"#前置条件和后置条件","children":[]},{"level":3,"title":"扩展点","slug":"扩展点","link":"#扩展点","children":[]},{"level":3,"title":"优先级","slug":"优先级","link":"#优先级","children":[]}]},{"level":2,"title":"调整用例模型","slug":"调整用例模型","link":"#调整用例模型","children":[{"level":3,"title":"包含关系","slug":"包含关系","link":"#包含关系","children":[]},{"level":3,"title":"扩展关系","slug":"扩展关系","link":"#扩展关系","children":[]},{"level":3,"title":"泛化关系","slug":"泛化关系","link":"#泛化关系","children":[]}]}],"git":{"updatedTime":1745032055000,"contributors":[{"name":"guoxin-qiu","username":"guoxin-qiu","email":"guoxin.qiu@outlook.com","commits":2,"url":"https://github.com/guoxin-qiu"}],"changelog":[{"hash":"a2b6e78156eb7f1fed6ecb0952cc98c6b90aa9d3","time":1745032055000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"change hierarchy"},{"hash":"45f44a745253207a888a70be6e8c284c0f1b33b5","time":1729677949000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"add 1023 x2"}]},"filePathRelative":"1.capacity/12.requirement/用例图.md"}');export{r as comp,p as data};
