import{_ as i,c as e,b as a,o as u}from"./app-C01vnHKY.js";const h={};function t(n,l){return u(),e("div",null,l[0]||(l[0]=[a('<h1 id="架构师能力" tabindex="-1"><a class="header-anchor" href="#架构师能力"><span>架构师能力</span></a></h1><h2 id="项目中角色" tabindex="-1"><a class="header-anchor" href="#项目中角色"><span>项目中角色</span></a></h2><ul><li>客户：为系统开发买单的人，关注系统的业务价值</li><li>用户：使用系统的人，关乎是否满足功能需求，提升效率和易用性等</li><li>项目经理：负责项目管理、组织、协调、沟通等管理工作</li><li>需求分析师：负责需求相关工作，比如业务分析、需求获取、需求调研、需求管理、编写需求规格说明书</li><li>系统架构师：负责整体的系统分析、架构规划、技术选型、核心功能需求和非功能性需求的架构设计</li><li>系统设计师：在架构模型的基础上，进行核心功能和非核心功能的详细设计</li><li>开发人员：根据架构设计和详细设计完成编码和单元测试，达到提测标准</li><li>测试人员：验证开发功能是否满足需求，比如进行功能测试、集成测试、性能测试、压力测试、安全性测试、回归测试等</li><li>运维人员：负责部署环境搭建、部署和日常维护</li></ul><h2 id="职责" tabindex="-1"><a class="header-anchor" href="#职责"><span>职责</span></a></h2><ul><li>支持售前或需求阶段，提供概念架构或技术咨询</li><li>系统分析、架构设计、技术选型、产出架构解决方案</li><li>指导项目团队成员，按照架构设计完成开发、测试和发布</li><li>开发或设计开发框架，制定编码 / 编程规范，设计架构原型，验证架构原型</li><li>组织技术和架构培训，把握技术 / 架构方向</li><li>方案平衡（实现与成本），干系人沟通，技术风险管理，技术领袖等</li></ul><h2 id="工作内容" tabindex="-1"><a class="header-anchor" href="#工作内容"><span>工作内容</span></a></h2><ul><li>售前阶段：给予商务支持，提供系统解决方案和架构咨询</li><li>需求阶段：与需求分析师一起，参与需求沟通，协助完成技术 / 业务咨询和需求模型（好多架构师同时是业务专家）</li><li>架构阶段：进行系统分析和设计，进行系统抽象，设计系统模型，进行技术原型、开发架构模型等设计</li><li>设计阶段：指导设计人员完成详细设计</li><li>开发阶段：指导开发人员按设计实现，解决技术难题</li><li>测试阶段：指导测试人员测试工作，特别是非功能需求的测试</li><li>发布阶段：指导部署人员按照部署架构进行部署，及时解答或反馈运行期间的架构问题</li><li>其他工作：技术选型、人员培训、技术指导等</li></ul><h2 id="工作流程" tabindex="-1"><a class="header-anchor" href="#工作流程"><span>工作流程</span></a></h2><p>需求分析主要包括需求模型、架构模型、设计模型、解决方案模型</p><ul><li><p>需求模型：参与需求分析和需求模型设计，提供技术建议或引导需求定义，提供解决方案指导</p><p>主要参与者：需求分析师、业务分析师</p><p>辅助参与者：架构师、设计师</p></li><li><p>架构模型：根据需求模型，产出架构模型</p><ul><li><p>选择架构对象：关键流程、核心用例和非功能需求</p></li><li><p>流程建模：梳理业务流程中涉及的对象、子系统模块、子系统划分、核心对象、通信机制、实物模型等</p></li><li><p>输出总体架构：根据领域模型和业务流程模型，结合组件架构，部署架构，通信机制，输出系统架构方案</p></li><li><p>架构验证：验证架构可用性，可以用评审或架构原型的方式，进行评审或实际测试验证</p><p>主要参与者：架构师、架构委员会</p><p>辅助参与者：系统设计师、开发人员、测试人员</p></li></ul></li><li><p>涉及模型：在架构师指导下，根据系统架构，完成各子系统、模块、功能、接口的概要或详细涉及</p><p>主要参与者：系统设计师、高级工程师</p><p>辅助参与者：架构师</p></li><li><p>解决方案模型：架构模型、涉及模型、架构原型等统一组成架构解决方案</p></li></ul><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><p>一个完整的系统架构应包括：整体架构、子系统、模块、功能概要或详细涉及、通信机制、事务机制、接口定义（内部、外部）、领域模型、业务流程、数据库设计、中间件、组件架构、部署架构等</p><p>系统架构解决方案标准：</p><ul><li>满足系统的功能和非共呢个性需求</li><li>符合项目要求的规模和成本</li><li>满足开发、测试和发布要求</li></ul><h2 id="能力模型" tabindex="-1"><a class="header-anchor" href="#能力模型"><span>能力模型</span></a></h2><h3 id="通用能力层" tabindex="-1"><a class="header-anchor" href="#通用能力层"><span>通用能力层</span></a></h3><ul><li>学习</li><li>人生规划 <ul><li>人生规划</li><li>职业规划</li><li>财务规划</li></ul></li><li>三商 <ul><li>财商</li><li>智商</li><li>情商</li></ul></li><li>思考能力 <ul><li>哲学</li><li>结构化 / 体系化思维能力</li><li>抽象思维能力</li><li>逻辑推理能力</li><li>理性思维能力</li></ul></li><li>沟通能力</li><li>个人管理 <ul><li>任务管理</li><li>时间管理</li><li>目标管理</li><li>计划管理</li></ul></li><li>团队协作</li><li>其他 <ul><li>职业化训练</li><li>项目管理</li><li>风险管理</li></ul></li></ul><h3 id="专业能力层" tabindex="-1"><a class="header-anchor" href="#专业能力层"><span>专业能力层</span></a></h3><ul><li>基础技术层 <ul><li>入门 <ul><li>打字</li><li>快捷键</li></ul></li><li>开发语言</li><li>具体技术</li><li>开发框架</li><li>重构 <ul><li>复用</li><li>封装</li></ul></li></ul></li><li>设计能力层 <ul><li>微观设计能力 <ul><li>数据结构</li><li>算法</li></ul></li><li>中观设计能力 <ul><li>UML</li><li>面向对象</li><li>模式</li><li>框架设计</li></ul></li></ul></li><li>架构（宏观设计）能力层 <ul><li>架构设计方法论</li><li>模式 <ul><li>解决方案模式</li><li>架构设计模式</li></ul></li><li>软件开发过程</li><li>业务理解能力</li></ul></li></ul>',19)]))}const s=i(h,[["render",t]]),r=JSON.parse('{"path":"/3.tech/01.tech-arch/architect-ability.html","title":"架构师能力","lang":"zh-cn","frontmatter":{},"headers":[{"level":2,"title":"项目中角色","slug":"项目中角色","link":"#项目中角色","children":[]},{"level":2,"title":"职责","slug":"职责","link":"#职责","children":[]},{"level":2,"title":"工作内容","slug":"工作内容","link":"#工作内容","children":[]},{"level":2,"title":"工作流程","slug":"工作流程","link":"#工作流程","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]},{"level":2,"title":"能力模型","slug":"能力模型","link":"#能力模型","children":[{"level":3,"title":"通用能力层","slug":"通用能力层","link":"#通用能力层","children":[]},{"level":3,"title":"专业能力层","slug":"专业能力层","link":"#专业能力层","children":[]}]}],"git":{"updatedTime":1745032055000,"contributors":[{"name":"guoxin-qiu","username":"guoxin-qiu","email":"guoxin.qiu@outlook.com","commits":5,"url":"https://github.com/guoxin-qiu"}],"changelog":[{"hash":"a2b6e78156eb7f1fed6ecb0952cc98c6b90aa9d3","time":1745032055000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"change hierarchy"},{"hash":"cf1a535ce24165a7f8da8bf85c1c9f2de88d6068","time":1692634731000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"update: change the groups"},{"hash":"24795fa27668d9eb86a60f67b09182b15314e9bc","time":1682330132000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"chore: structure adjust big big"},{"hash":"6c5b730e5acb1ab8dee133ad8856957269916d1d","time":1653878999000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"chore: change hierarchical structure"},{"hash":"f84a641ec709f6a3483190ecad67b877d5c64fb7","time":1651105335000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"chore: init"}]},"filePathRelative":"3.tech/01.tech-arch/architect-ability.md"}');export{s as comp,r as data};
