import{_ as e,c as p,b as l,o as s}from"./app-C01vnHKY.js";const a="/kiss/assets/%E7%A0%94%E5%8F%91%E6%95%88%E8%83%BD%E9%BB%84%E9%87%91%E4%B8%89%E8%A7%92-BzCpLoyH.png",t="/kiss/assets/%E6%95%88%E8%83%BD%E5%AE%9E%E8%B7%B5%E5%9C%B0%E5%9B%BE-C17jxmOJ.png",o="/kiss/assets/%E6%95%88%E8%83%BD%E5%B9%B3%E5%8F%B0-BRLru1Yf.png",n="/kiss/assets/%E6%95%88%E8%83%BD%E5%BA%A6%E9%87%8F-CLHg8P4B.png",u="/kiss/assets/%E6%95%88%E8%83%BD%E5%BA%A6%E9%87%8F%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB-BPqOodq1.png",r={};function c(h,i){return s(),p("div",null,i[0]||(i[0]=[l('<h1 id="研发效能宣言导读手册" tabindex="-1"><a class="header-anchor" href="#研发效能宣言导读手册"><span>研发效能宣言导读手册</span></a></h1><h2 id="研发效能宣言" tabindex="-1"><a class="header-anchor" href="#研发效能宣言"><span>研发效能宣言</span></a></h2><p>我们一直在追求达到更高的研发效能，可以更高效、更高质量、更可靠、可持续地交付更优的业务价值：</p><ul><li>业务价值 高于 职能目标（业务）</li><li>全局流动 高于 局部优化（流程）</li><li>工程卓越 高于 工具平台（技术）</li><li>数据思维 高于 经验沉淀（数据）</li><li>工程师文化 高于 绩效管理（人和组织）</li></ul><p>也就是说，尽管右项有其价值，我们更重视左项的价值。</p><p><strong>研发效能宣言发起人：</strong></p><p>茹炳晟 腾讯 T4 级技术专家，腾讯研究院特约研究员</p><p>张乐 腾讯 技术工程事业群 DevOps 与研发效能资深专家</p><p>缪亚波 微软 M365 工程研发总监</p><p>石雪峰 京东 零售工程效率专家</p><p>丁辉 中兴通讯 无线教练组组长</p><p>郭磊磊 阿里巴巴 淘系技术质量部高级测试专家</p><p>王东 满帮科技 CTO</p><p>芈峮 快手 移动端效能负责人</p><p>廖定 锦州银行 信息技术部联席总经理</p><p>吴昊 抖音 测开负责人</p><p>张涛 网易 高级测试总监</p><p>孙远 测试开发专家</p><p>张南 Google 中国研发生产力团队总监</p><p>刘付强 msup 创始人兼首席执行官</p><p>（排名不分先后）</p><h2 id="研发效能的黄金三角" tabindex="-1"><a class="header-anchor" href="#研发效能的黄金三角"><span>研发效能的黄金三角</span></a></h2><p><strong>作者简介：</strong></p><p>张乐，腾讯 DevOps 与研发效能资深专家，曾长期工作于拥有数万研发的互联网大厂（百度、京东等），专注于敏捷与 DevOps 实践体系、DevOps 平台产品设计、研发效能度量体系建设等方向，历任资深敏捷教练、DevOps 平台产品总监、集团级研发效能度量标准化联盟负责人等岗位。长期活跃于技术社区，目前是 DevOps 起源国际组织 DevOpsDays 中国区核心组织者，同时也是国内多个技术峰会的联席主席、DevOps/研发效能专题出品人、特邀演讲嘉宾。EXIN DevOps 全系列国际认证授权讲师、凤凰项目 DevOps 沙盘国际授权教练。历任埃森哲、惠普等全球五百强企业资深咨询顾问、技术专家，多年敏捷与 DevOps 转型、工程效率提升和大型项目实践经验。畅销书《独角兽项目：数字化时代的开发传奇》译者。</p><p>2021 年对互联网行业而言，注定是不平凡的一年。 今年我们已经习惯了看到各种互联网大事件的发生，某某公司上市折戟了、某某公司遭遇反垄断调查了、某某公司的 APP 被下架了、某某行业遭遇政策性团灭了…而另一方面，我们也能从互联网巨头近期的各种动作中识别出一些风向的变化，从积极的角度来看，他们正朝着一种更科学、更可持续的方向在发展。</p><p><strong>“研发效能”是核心竞争力</strong></p><p>研发效能就是更高效、更高质量、更可靠、可持续地交付更优的业务价值的能力。 具体来讲：</p><ul><li>更高效：更高的效率代表更快、更及时的交付，这样就能更早的进入市场，然后更早地学习、更早地调整、更早地降低风险、更早地锁定进展和价值。这是敏捷和精益思想的核心；</li><li>更高质量：我们研发的产品是有质量红线、有底线要求的。快速交付给客户有质量问题的功能除了会引发投诉外没有任何价值。质量是内建的，不是事后检验出来的；</li><li>更可靠：我们要的是敏捷，不是脆弱（agile rather than fragile），安全和合规方面都要有保障；</li><li>可持续：短期的取巧和“快糙猛”、小作坊式的开发，只会给未来带来更多的技术债务和持久的效率低下，软件研发不是一锤子买卖，我们应该用“长线思维”来思考问题；</li><li>更优的业务价值：我们经常说“以始为终”，你提供给客户或业务的东西应该是有价值的，这是关于你为什么要做这些事情的根本出发点。</li></ul><p>对个人的好处：</p><ul><li>强调功劳而不是苦劳：不再按加班时长进行排名，而是让大家的目标聚焦在对结果有帮助的事情上，即交付业务价值；着眼点从局部产出过渡到整体结果上；</li><li>强调更聪明地工作：就是我们常说的&quot;好钢用在刀刃上&quot;，通过一系列工作流程、协作方式、角色职责、系统架构、技术平台上的优化，通过工具建设和自动化程度的提升，让大家能够摆脱冗长无聊的各类会议、重复机械的手工操作，把时间花在真正有创造性的事情上；</li><li>强调个人能力成长：组织要给大家留出一些空闲时间来，用于个人的学习和提高，成长的机会也许比晋升和绩效更能吸引人。优秀的企业会注重侧重培养个人的技术能力、软件工程能力、业务领域能力。</li></ul><p><strong>研发效能黄金三角</strong></p><p>这些年我一直在拥有数万研发人员规模的大型互联网公司中做 DevOps 和研发效能的相关工作，做过敏捷和持续交付实践的大规模推广，组建并带领团队从零开始建设过服务于全公司的、一体化、一站式的 DevOps 平台，发起过公司级效能度量委员会并制定度量指标体系，加之在技术社区持续活跃、在各类综合性/专业性技术大会中担任出品人等角色，对互联网大厂的研发效能提升思路和做法有一定的理解，<strong>我把 这些经验总结起来，形成一个具有增强回路效果的研发效能提升体系，我称之为”研发效能的黄金三角”。</strong></p><p><img src="'+a+'" alt="研发效能黄金三角"></p><p>研发效能的黄金三角由三个部分组成，分别是效能实践、效能平台和效能度量。这三个部分彼此独立，但又相互关联。其关联关系是：</p><ul><li>“效能实践”中的优秀实践可以固化，沉淀到“效能平台”；反过来，“效能平台”支撑了“效能实践”的落地；</li><li>“效能平台”产生的大量研发数据形成了“效能度量”中的效能洞察；反过来，“效能度量”可以持续观测“效能平台”产生的数据，进行下钻和深入分析；</li><li>“效能度量”中的洞察和分析结果可用于对性能优化“效能实践”；反过来，“效能实践”可以给“效能度量”更多的输入，帮助完善度量指标集和分析方法；</li></ul><p>所以，效能实践&lt;-&gt;效能平台&lt;-&gt;效能度量就形成了一个彼此增强、迭代优化的回路，有效利用好这个增强回路就可以帮助企业研发效能持续增强、不断提升。</p><p>重申一下，我们的最终目标是：更高效、更高质量、更可靠、可持续地交付更优的业务价值。</p><h3 id="效能实践" tabindex="-1"><a class="header-anchor" href="#效能实践"><span>效能实践</span></a></h3><p><img src="'+t+'" alt="效能实践地图"></p><p>目标：提炼和采纳与上下文匹配的 DevOps 及效能提升实践</p><p>价值主张：产品导向 + 工程卓越</p><ul><li>产品导向：区别于项目导向的交付模式（在特定时间内，以相对确定的预算和人力，交付预先计划的内容），我们更倾向于以产品导向的交付模式组织相关效能实践。**产品导向让我们面向长期的业务价值，组织长期稳定的敏捷团队，持续迭代和优化与时俱进的产品。**我们承认需求的不确定性，要持续改进产品，而不是简单的遵从既定计划；我们要考虑长期产品和团队能力的建设，而不是把短期项目做完了事；我们要考虑持续为客户创造价值，而不是看项目有没有超过预算；我们要面向工作结果进行响应，而不是盯着一些局部工作的产出；</li><li>工程卓越：我们必须持续关注工程和技术的卓越性，而不仅仅是交付了多少需求或特性。比起多完成了几个小功能，也许工程和技术上的提升所带来的价值会更大。就像微软的 CEO 萨蒂亚·纳德拉所说：每一天我都在开发新特性和提升我们的生产力之间进行权衡。我们要追求用工程化的方法持续把确定性、重复性、机械性的任务自动化，从而在提升效率和同时让工程师有更多时间花在有创造性的事情上。用工程化的思路解决问题、追求工程卓越就是一种“反内卷”的表现；</li></ul><p>实践分类：业务敏捷创新实践、敏捷精益协作实践、持续交付工程实践、云原生技术实践、组织和团队拓扑等；</p><p>实施建议：业界一致认为，DevOps 领域、研发效能领域从来没有“一刀切”的解决方案，所以不要迷信某个成熟度模型、某种规模化框架就一定对你有帮助。正确的实践一定是基于上下文的，找出价值流中最大的障碍，选取工具箱中适当的实践，从小范围开始，纵向进行实验，应用敏捷思维来提升组织效能，逐个解决瓶颈，周而复始。</p><h3 id="效能平台" tabindex="-1"><a class="header-anchor" href="#效能平台"><span>效能平台</span></a></h3><p><img src="'+o+'" alt="效能平台"></p><p>目标：打造一站式、一体化的效能平台，支撑软件交付全生命周期</p><p>价值主张：自动化+自助化，场景化+生态化</p><ul><li>自动化：DevOps 讲究“自动化一切”，这正是 DevOps 的精髓“CALMS”中的 A（Automation），研究表明高效能的企业在自动化构建、自动化测试、自动化环境创建和部署、自动化监控和可观测性等方面要远远高于低效能企业；</li><li>自助化：自助化代表上下游角色可以通过平台紧密衔接，工具平台被某种角色创建出来以后，上下游角色应该都可以按需、自助地使用，降低了对某种角色或某个人的依赖，这样组织协作效率才能提升；</li><li>场景化：我们经常看到恨锁所谓的“一体化、一站式”是按功能领域进行划分并展示相关能力的，或者说是一个“拼凑”起来的平台。而真正让管理者和工程师使用趁手的、易用的平台一定是按研发场景进行组织的，比如以某一产品为主线贯穿 DevOps 流程，方便用户管理产品相关需求、创建特性分支、迭代开发和交付。同样，以应用为主线对于运维人员来讲就会更友好；</li><li>生态化：在互联网大厂搭建效能平台普遍遇到的难点就是业务复杂、规模庞大、业务独特、场景众多，很难通过一个团队的努力就能满足整个公司的需求。但是各个业务部门如果什么都自己做、重复造轮子、甚至相互恶性竞争就更不好了。所以，作为平台建设者应该更加开放，分离平台底座和原子能力的建设，即通过生态合作伙伴关系，促进公司效能平台的良性发展。从公司角度来讲，减少重复建设和避免内耗，也都是“反内卷”的表现。</li></ul><p>实施建议：效能平台的建设切莫一上来就追求“大而全”，所谓的“一站式、一体化”只是手段而不是目的，最终以能满足研发场景的诉求为主。尤其是在平台建设初期，不妨以支持“toB”客户的思维来进行平台运营，深度绑定和跟进种子团队，深刻理解业务痛点和需求，这样做出来的平台马上就有人用，然后收集反馈，像滚雪球一样越做越完善。另外，还要注重需求价值流、工程价值流之间的联动，而不要分裂成毫无关系的两个系统。</p><h3 id="效能度量" tabindex="-1"><a class="header-anchor" href="#效能度量"><span>效能度量</span></a></h3><p><img src="'+n+'" alt="效能度量"></p><p>目标：在正确的方向上开展研发效能度量和数据洞察，指导和驱动效能改进和提升</p><p>价值主张：数据驱动+实验思维</p><ul><li>数据驱动：我们经常遇到的现象是，一个组织或者团队在消耗了大量的”变革”时间成本和人力资源后，却无法回答一些看似本质的问题，比如：”你们的研发效能到底怎么样？比别的公司、别的团队更好还是更差？瓶颈点和问题是什么？采纳了敏捷或 DevOps 实践之后有没有效果？下一步应该采取什么行动？” 。我认为研发效能度量的目标就是让效能可量化、可分析、可提升，通过数据驱动的方式更加理性地评估和改善效能，而不要总是凭直觉感性地说”我觉得…”。用真实、有效的数据说话，勇于挑战现有流程和规则，直指研发痛点和根因，也是一种&quot;反内卷&quot;的表现；</li><li>实验思维：研发效能提升没有”一招鲜，吃遍天”的万能招式，而是要基于上下文进行有针对性的实验和探索。比如，想提升线上质量、降低缺陷密度，经验告诉我们应该去加强单元测试的覆盖、完善 Code Review 机制、做好自动化测试案例的补充。但是，这真的有效么？我们通过数据来看，很可能没有任何效果！并不是说这些实践不该做，而是可能做的不到位。比如只是为了指标好看，编写缺少断言的单元测试、找熟人走过场分分钟通过的代码评审、覆盖一些非热点代码来硬凑测试覆盖率目标等等。所以，我们需要实验思维，找到那些真正有用的改进活动及其与结果之间的因果关系，有的放矢才会更有效率和有效果；</li></ul><p>实施建议：效能度量本身也是一个比较复杂的体系，包含数据采集、度量指标、度量模型、度量产品、数据运营等多个方面，我把它们整理出来，称为“研发效能度量的五项精进”。</p><ol><li>构建自动采集效能数据的能力。通过系统分层处理好数据接入、存储计算和数据分析。比如，小型团队通过 MQ、API 等方式把数据采集起来之后，使用 MySql（存放明细数据和汇总数据）、Redis（存放缓存数据）、ES（数据聚合和检索分析）三件套基本就够用了；而大规模企业由于数据量庞大、汇聚和分析逻辑复杂，建议使用整套大数据分析解决方案，比如流行的流批一体的大数据分析架构。</li><li>设计效能度量指标体系。选取结果指标用于评估能力，过程指标用于指导分析改进。比如：需求交付周期、需求吞吐量就是结果指标，可用于对交付效率进行整体评估；交付各阶段耗时、需求变更率、需求评审通过率、缺陷解决时长就是过程指标，可用于指导分析改进。通过先导性指标进行事前干预，通过滞后性指标进行事后复盘。比如：流动负载（在制品数量）是一个先导型指标，根据利特尔法则，在制品过高一定会导致后续的交付效率下降、交付周期变长，所以识别到这类问题就要进行及时干预；而线上缺陷密度就是一个滞后性指标，线上缺陷已经发生了，我们能做的就只有复盘、对缺陷根因进行分析，争取在下个统计周期内能让质量提升、指标好转。 <img src="'+u+'" alt="效能度量指标体系"></li><li>建立效能度量分析模型。这里的模型是指对研发效能问题、规律进行抽象后的一种形式化的表达方式。比如流时间（需求交付周期）、流速率（需求吞吐量）、流负载、流效率、流分布这五类指标结合在一起，就是一个典型的分析产品/团队交付效率的模型，通过这个模型可以讲述一个完整的故事，回答一个关于交付效率的本质问题。模型还有很多种，比如组织效能模型（如战略资源投入分布和合理性）、产品/团队效能模型、工程师效能模型等，我们还要合理采用趋势分析、相关性分析、诊断分析等方法，分析效能问题、指导效能改进；</li><li>设计和实现效能度量产品。将数据转化为信息，然后将信息转化为知识，让用户可以自助消费数据，主动进行分析和洞察；简单的度量产品以展示度量指标为主，比如按照部门、产品线等维度进行指标卡片和指标图表的展现；做的好一点的度量产品可以加入各种分析能力，可以进行下钻上卷，可以进行趋势分析、对比分析等；而做的比较完善的度量产品应该自带各种分析模型和逻辑，面向用户屏蔽理论和数据关系的复杂性，直接输出效能报告，并提供问题根因分析和改进建议，让对效能分析不是很熟悉的人也能自助地使用。</li><li>实现有效的效能数据运营体系。放在最后的其实才是最重要的，我们有了度量指标、有了度量模型、有了度量产品，但一定要注意的是：要避免不正当使用度量而产生的负面效果，避免将度量指标 KPI 化而导致&quot;造数据&quot;的短视行为。根据古德哈特定律，度量不是武器，而是学习和持续改进的工具。正所谓&quot;上有政策，下有对策&quot;，&quot;度量什么就会得到什么&quot;，为了避免度量带来的各种副作用，我们首要的度量对象应该是工作本身，而不是工作者。另外，效能改进的运作模式也很重要，只是把数据报表放在那里效能不会自己变好，需要有团队或专人负责推动改进事宜。</li></ol><p><strong>总结</strong></p><p>“反内卷”的潮流已经悄然而至，研发效能的提升是科技企业的必由之路。</p><p>我们要想尽一切办法做到更高效、更高质量、更可靠、可持续地交付更优的业务价值。 研发效能的黄金三角由三个部分组成，分别是效能实践、效能平台和效能度量。我们 希望它们就形成一个彼此增强、迭代优化的增强回路，有效利用好这个模型可以促进 企业研发效能持续增强、不断提升，最终助力企业和业务的成功。</p>',60)]))}const m=e(r,[["render",c]]),d=JSON.parse('{"path":"/7.others/11.tech-efficiency/%E7%A0%94%E5%8F%91%E6%95%88%E8%83%BD.html","title":"研发效能宣言导读手册","lang":"zh-cn","frontmatter":{},"headers":[{"level":2,"title":"研发效能宣言","slug":"研发效能宣言","link":"#研发效能宣言","children":[]},{"level":2,"title":"研发效能的黄金三角","slug":"研发效能的黄金三角","link":"#研发效能的黄金三角","children":[{"level":3,"title":"效能实践","slug":"效能实践","link":"#效能实践","children":[]},{"level":3,"title":"效能平台","slug":"效能平台","link":"#效能平台","children":[]},{"level":3,"title":"效能度量","slug":"效能度量","link":"#效能度量","children":[]}]}],"git":{"updatedTime":1745043563000,"contributors":[{"name":"guoxin-qiu","username":"guoxin-qiu","email":"guoxin.qiu@outlook.com","commits":5,"url":"https://github.com/guoxin-qiu"}],"changelog":[{"hash":"26baba58da405cc8ce226278a2d276ba14481967","time":1745043563000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"update h 2"},{"hash":"a2b6e78156eb7f1fed6ecb0952cc98c6b90aa9d3","time":1745032055000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"change hierarchy"},{"hash":"cf1a535ce24165a7f8da8bf85c1c9f2de88d6068","time":1692634731000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"update: change the groups"},{"hash":"24795fa27668d9eb86a60f67b09182b15314e9bc","time":1682330132000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"chore: structure adjust big big"},{"hash":"38a8cdb15f4cb6105250ca80cd2604598f301c64","time":1651816173000,"email":"guoxin.qiu@outlook.com","author":"guoxin-qiu","message":"update: efficiency"}]},"filePathRelative":"7.others/11.tech-efficiency/研发效能.md"}');export{m as comp,d as data};
